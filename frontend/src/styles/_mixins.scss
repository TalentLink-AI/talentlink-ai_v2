// frontend/src/styles/mixins.scss
@use 'sass:math';
@use 'sass:color';
@use 'variables' as *;

// Media query mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$breakpoint-sm - 1}) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (min-width: #{$breakpoint-sm}) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: #{$breakpoint-md}) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: #{$breakpoint-lg}) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: #{$breakpoint-xl}) {
      @content;
    }
  } @else if $breakpoint == 2xl {
    @media (min-width: #{$breakpoint-2xl}) {
      @content;
    }
  }
}

// Flexbox mixins
@mixin flex-center {
  & {
    display: flex;
    justify-content: center;
    align-items: center;
  } 
}

@mixin flex-between {
  & {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
}

@mixin flex-column {
  & {
    display: flex;
    flex-direction: column;
  }
}

// Typography mixins
@mixin heading-1 {
  font-family: $font-family-headings;
  font-size: $font-size-3xl;
  font-weight: $font-weight-bold;
  line-height: $line-height-tight;
}

@mixin heading-2 {
  font-family: $font-family-headings;
  font-size: $font-size-2xl;
  font-weight: $font-weight-bold;
  line-height: $line-height-tight;
}

@mixin heading-3 {
  font-family: $font-family-headings;
  font-size: $font-size-xl;
  font-weight: $font-weight-bold;
  line-height: $line-height-tight;
}

@mixin body-text {
  font-family: $font-family-base;
  font-size: $font-size-base;
  font-weight: $font-weight-normal;
  line-height: $line-height-base;
}

@mixin small-text {
  font-family: $font-family-base;
  font-size: $font-size-sm;
  line-height: $line-height-base;
}

// Button mixins
@mixin button-base {
  display: inline-block;
  font-weight: $font-weight-medium;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: $border-width-default solid transparent;
  padding: $spacing-3 $spacing-6;
  font-size: $font-size-base;
  line-height: $line-height-base;
  border-radius: $border-radius-md;
  transition: all $transition-fast ease-in-out;
  cursor: pointer;

  &:focus, &:active {
    outline: none;
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.65;
  }
}

@mixin button-primary {
  @include button-base;
  background-color: $color-primary;
  color: $color-white;

  &:hover, &:focus {
    background-color: $color-primary-dark;
  }

  &:disabled {
    background-color: $color-primary-light;
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: transparent;
  border-color: $color-secondary;
  color: $color-secondary;

  &:hover, &:focus {
    background-color: $color-gray-100;
  }
}

@mixin button-danger {
  @include button-base;
  background-color: $color-danger;
  color: $color-white;

  &:hover, &:focus {
    background-color: color.adjust($color-danger, $lightness: -10%);
  }
}

@mixin button-success {
  @include button-base;
  background-color: $color-success;
  color: $color-white;

  &:hover, &:focus {
    background-color: color.adjust($color-success, $lightness: -10%);
  }
}

// Card mixins
@mixin card {
  background-color: $color-white;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-md;
  padding: $spacing-6;
}

// Form mixins
@mixin form-control {
  display: block;
  width: 100%;
  padding: $spacing-3 $spacing-4;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $color-text;
  background-color: $color-white;
  background-clip: padding-box;
  border: $border-width-default solid $color-border;
  border-radius: $border-radius-md;
  transition: border-color $transition-fast ease-in-out, box-shadow $transition-fast ease-in-out;

  &:focus {
    border-color: $color-primary;
    outline: 0;
    box-shadow: 0 0 0 0.25rem rgba($color-primary, 0.25);
  }

  &::placeholder {
    color: $color-text-muted;
    opacity: 1;
  }

  &:disabled {
    background-color: $color-gray-200;
    opacity: 1;
  }
}

@mixin form-label {
  display: inline-block;
  margin-bottom: $spacing-2;
  font-weight: $font-weight-medium;
}

@mixin form-error {
  color: $color-danger;
  font-size: $font-size-sm;
  margin-top: $spacing-1;
}

// Container mixin
@mixin container {
  width: 100%;
  padding-right: $spacing-4;
  padding-left: $spacing-4;
  margin-right: auto;
  margin-left: auto;
  
  @include respond-to(sm) {
    max-width: $container-sm;
  }
  
  @include respond-to(md) {
    max-width: $container-md;
  }
  
  @include respond-to(lg) {
    max-width: $container-lg;
  }
  
  @include respond-to(xl) {
    max-width: $container-xl;
  }
  
  @include respond-to(2xl) {
    max-width: $container-2xl;
  }
}

// Helper mixins
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Animation mixins
@mixin fade-in($duration: $transition-base) {
  animation: fadeIn $duration ease-in;
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
}

@mixin slide-in-up($duration: $transition-base) {
  animation: slideInUp $duration ease-out;
  
  @keyframes slideInUp {
    from {
      transform: translateY(20px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
}