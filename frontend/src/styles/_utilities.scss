// frontend/src/styles/utilities.scss
@use 'sass:math';
@use 'variables' as *;
@use 'mixins' as *;

// Display utilities
.d-none { display: none !important; }
.d-inline { display: inline !important; }
.d-inline-block { display: inline-block !important; }
.d-block { display: block !important; }
.d-flex { display: flex !important; }
.d-inline-flex { display: inline-flex !important; }
.d-grid { display: grid !important; }

// Flex utilities
.flex-row { flex-direction: row !important; }
.flex-column { flex-direction: column !important; }
.flex-wrap { flex-wrap: wrap !important; }
.flex-nowrap { flex-wrap: nowrap !important; }
.flex-grow-0 { flex-grow: 0 !important; }
.flex-grow-1 { flex-grow: 1 !important; }
.flex-shrink-0 { flex-shrink: 0 !important; }
.flex-shrink-1 { flex-shrink: 1 !important; }

.justify-content-start { justify-content: flex-start !important; }
.justify-content-end { justify-content: flex-end !important; }
.justify-content-center { justify-content: center !important; }
.justify-content-between { justify-content: space-between !important; }
.justify-content-around { justify-content: space-around !important; }

.align-items-start { align-items: flex-start !important; }
.align-items-end { align-items: flex-end !important; }
.align-items-center { align-items: center !important; }
.align-items-baseline { align-items: baseline !important; }
.align-items-stretch { align-items: stretch !important; }

.align-self-start { align-self: flex-start !important; }
.align-self-end { align-self: flex-end !important; }
.align-self-center { align-self: center !important; }
.align-self-baseline { align-self: baseline !important; }
.align-self-stretch { align-self: stretch !important; }

// Text utilities
.text-left { text-align: left !important; }
.text-right { text-align: right !important; }
.text-center { text-align: center !important; }
.text-justify { text-align: justify !important; }

.text-lowercase { text-transform: lowercase !important; }
.text-uppercase { text-transform: uppercase !important; }
.text-capitalize { text-transform: capitalize !important; }

.text-wrap { white-space: normal !important; }
.text-nowrap { white-space: nowrap !important; }
.text-truncate { @include truncate; }

.font-weight-light { font-weight: $font-weight-light !important; }
.font-weight-normal { font-weight: $font-weight-normal !important; }
.font-weight-medium { font-weight: $font-weight-medium !important; }
.font-weight-bold { font-weight: $font-weight-bold !important; }

// Color utilities
.text-primary { color: $color-primary !important; }
.text-secondary { color: $color-secondary !important; }
.text-success { color: $color-success !important; }
.text-info { color: $color-info !important; }
.text-warning { color: $color-warning !important; }
.text-danger { color: $color-danger !important; }
.text-muted { color: $color-text-muted !important; }

.bg-primary { background-color: $color-primary !important; }
.bg-secondary { background-color: $color-secondary !important; }
.bg-success { background-color: $color-success !important; }
.bg-info { background-color: $color-info !important; }
.bg-warning { background-color: $color-warning !important; }
.bg-danger { background-color: $color-danger !important; }
.bg-light { background-color: $color-gray-100 !important; }
.bg-dark { background-color: $color-gray-800 !important; }
.bg-white { background-color: $color-white !important; }
.bg-transparent { background-color: transparent !important; }

// Spacing utilities
// Generate margin and padding utility classes
$spacing-properties: (
  'm': 'margin',
  'p': 'padding'
);

$spacing-directions: (
  't': 'top',
  'r': 'right',
  'b': 'bottom',
  'l': 'left',
  'x': ('left', 'right'),
  'y': ('top', 'bottom')
);

$spacing-amounts: (
  '0': 0,
  '1': $spacing-1,
  '2': $spacing-2,
  '3': $spacing-3,
  '4': $spacing-4,
  '5': $spacing-5,
  '6': $spacing-6,
  '8': $spacing-8,
  '10': $spacing-10,
  '12': $spacing-12,
  '16': $spacing-16,
  '20': $spacing-20,
  '24': $spacing-24,
  'auto': auto
);

@each $prop-abbr, $prop in $spacing-properties {
  // All sides (e.g., m-4)
  @each $size-abbr, $size in $spacing-amounts {
    .#{$prop-abbr}-#{$size-abbr} {
      #{$prop}: $size !important;
    }
  }
  
  // Specific directions (e.g., mt-4, mx-auto)
  @each $dir-abbr, $dir in $spacing-directions {
    @each $size-abbr, $size in $spacing-amounts {
      .#{$prop-abbr}#{$dir-abbr}-#{$size-abbr} {
        @if type-of($dir) == 'list' {
          @each $d in $dir {
            #{$prop}-#{$d}: $size !important;
          }
        } @else {
          #{$prop}-#{$dir}: $size !important;
        }
      }
    }
  }
}

// Width and height utilities
$sizes: (
  '25': 25%,
  '50': 50%,
  '75': 75%,
  '100': 100%,
  'auto': auto
);

@each $prop, $abbr in (width: w, height: h) {
  @each $size, $value in $sizes {
    .#{$abbr}-#{$size} {
      #{$prop}: $value !important;
    }
  }
}

.mw-100 { max-width: 100% !important; }
.mh-100 { max-height: 100% !important; }
.min-vw-100 { min-width: 100vw !important; }
.min-vh-100 { min-height: 100vh !important; }
.vw-100 { width: 100vw !important; }
.vh-100 { height: 100vh !important; }

// Border utilities
.border { border: $border-width-default solid $color-border !important; }
.border-0 { border: 0 !important; }
.border-top { border-top: $border-width-default solid $color-border !important; }
.border-right { border-right: $border-width-default solid $color-border !important; }
.border-bottom { border-bottom: $border-width-default solid $color-border !important; }
.border-left { border-left: $border-width-default solid $color-border !important; }

.border-primary { border-color: $color-primary !important; }
.border-secondary { border-color: $color-secondary !important; }
.border-success { border-color: $color-success !important; }
.border-danger { border-color: $color-danger !important; }

.rounded { border-radius: $border-radius-md !important; }
.rounded-sm { border-radius: $border-radius-sm !important; }
.rounded-lg { border-radius: $border-radius-lg !important; }
.rounded-circle { border-radius: 50% !important; }
.rounded-pill { border-radius: $border-radius-full !important; }
.rounded-0 { border-radius: 0 !important; }

// Position utilities
.position-static { position: static !important; }
.position-relative { position: relative !important; }
.position-absolute { position: absolute !important; }
.position-fixed { position: fixed !important; }
.position-sticky { position: sticky !important; }

.fixed-top {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: $z-index-fixed;
}

.fixed-bottom {
  position: fixed;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: $z-index-fixed;
}

.sticky-top {
  position: sticky;
  top: 0;
  z-index: $z-index-sticky;
}

// Shadow utilities
.shadow-none { box-shadow: none !important; }
.shadow-sm { box-shadow: $shadow-sm !important; }
.shadow { box-shadow: $shadow-md !important; }
.shadow-lg { box-shadow: $shadow-lg !important; }
.shadow-xl { box-shadow: $shadow-xl !important; }

// Visibility utilities
.visible { visibility: visible !important; }
.invisible { visibility: hidden !important; }

// Screen reader utilities
.sr-only { @include visually-hidden; }

// Overflow utilities
.overflow-auto { overflow: auto !important; }
.overflow-hidden { overflow: hidden !important; }
.overflow-visible { overflow: visible !important; }
.overflow-scroll { overflow: scroll !important; }

.overflow-x-auto { overflow-x: auto !important; }
.overflow-y-auto { overflow-y: auto !important; }
.overflow-x-hidden { overflow-x: hidden !important; }
.overflow-y-hidden { overflow-y: hidden !important; }

// Clearfix
.clearfix { @include clearfix; }

// Additional spacing utility classes
.mr-1 { margin-right: $spacing-1 !important; }
.mr-2 { margin-right: $spacing-2 !important; }
.mr-3 { margin-right: $spacing-3 !important; }
.mr-4 { margin-right: $spacing-4 !important; }

.ml-1 { margin-left: $spacing-1 !important; }
.ml-2 { margin-left: $spacing-2 !important; }
.ml-3 { margin-left: $spacing-3 !important; }
.ml-4 { margin-left: $spacing-4 !important; }