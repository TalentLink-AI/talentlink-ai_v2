services:
  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "4200:4200"
    volumes:
      - node_modules:/app/node_modules
      - angular_cache:/app/.angular/cache
      #- ./frontend:/app:cached
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=fdsjklafjdlkajfkldasjfaldksjlkfads
      - AUTH0_ISSUER=${AUTH0_DOMAIN}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
    #command: npm start
    command: sh -c "npm install && npm start"

  # API Gateway - Entry point for all API requests
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./backend/api-gateway:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=${MONGODB_URI}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
      - PAYMENT_SERVICE_URL=${PAYMENT_SERVICE_URL}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      - AUTH0_ISSUER_BASE_URL=${AUTH0_ISSUER_BASE_URL}
    depends_on:
      - mongodb
      - user-service
      - payment-service

  # User Service - Initial service to handle authentication
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3001"
    volumes:
      - ./backend/user-service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URI=${MONGODB_URI}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      - AUTH0_ISSUER_BASE_URL=${AUTH0_ISSUER_BASE_URL}
    depends_on:
      - mongodb

  # Payment Service
  payment-service:
    build:
      context: ./backend/payment-service
      dockerfile: Dockerfile.dev
    ports:
      - "3002:3002"
    volumes:
      - ./backend/payment-service:/app:cached
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3002
      - MONGODB_URI=${MONGODB_URI}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - STRIPE_CURRENCY=USD
      - STRIPE_SUCCESS_URL=${FRONTEND_URL}/payment/success
      - STRIPE_CANCEL_URL=${FRONTEND_URL}/payment/cancel
      - PLATFORM_FEE_PERCENT=15
    depends_on:
      - mongodb

  # Job Service
  job-service:
    build:
      context: ./backend/job-service
      dockerfile: Dockerfile.dev
    container_name: talentlink-job-service
    volumes:
      - ./backend/job-service:/app
      - /app/node_modules
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - MONGODB_URI=mongodb://mongodb:27017/talentlink
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - AUTH0_ISSUER_BASE_URL=${AUTH0_ISSUER_BASE_URL}
      - PAYMENT_SERVICE_URL=http://payment-service:3002
      - USER_SERVICE_URL=http://user-service:3001
      - CORS_ORIGINS=http://localhost:3000,http://localhost:4200
    depends_on:
      - mongodb
      - payment-service
      - user-service

  # Message Service
  messaging-service:
    build:
      context: ./backend/messaging-service
      dockerfile: Dockerfile.dev
    container_name: talentlinkai-messaging-service
    volumes:
      - ./backend/messaging-service:/app
      - /app/node_modules
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - MONGODB_URI=mongodb://mongodb:27017/talentlink
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - AUTH0_ISSUER_BASE_URL=${AUTH0_ISSUER_BASE_URL}
      - PAYMENT_SERVICE_URL=http://payment-service:3002
      - USER_SERVICE_URL=http://user-service:3001
      - CORS_ORIGINS=http://localhost:3000,http://localhost:4200
    depends_on:
      - mongodb
      - user-service

  # MongoDB - Database
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=talentlink

volumes:
  mongodb-data:
  node_modules:
  angular_cache:
